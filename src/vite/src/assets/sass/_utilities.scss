// ====================================================================
// UTILITIES
//
//   Layout
//
//     ux-flexButtonRow        ... simple horizontal spacing of * > childrens
//
//
//   Sizes / Spacings
//
//     ux-maxWidth300/360
//
// ====================================================================

@use "sass:list";

/* @define utilities */

// --------------------------------------------------------------------
// MIN/MAX WIDTH
//
//   Useful to align *block* and *inline-block* elements:
//
//     - Use on buttons so they are not too small when label is small.
//     - Use on centered buttons stacked vertically so they are aligned.
//
//   Example:
//
//     <div class="ux-maxWidth300 mx-auto">
//
// --------------------------------------------------------------------
$maxWidthItems: ("300" 300px, "360" 360px);
@each $item in $maxWidthItems {
  $key: list.nth($item, 1);
  $val: list.nth($item, 2);
  //////////////////////////////////////////////////////////////////
  // Output:
  //   .ux-maxWidth300 {
  //     max-width: 300px;
  //   }
  //////////////////////////////////////////////////////////////////
  .ux-maxWidth#{$key} {
    max-width: $val;
  }
}

$minWidthItems: ("100" 100px, "200" 200px);
@each $item in $minWidthItems {
  $key: list.nth($item, 1);
  $val: list.nth($item, 2);
  //////////////////////////////////////////////////////////////////
  // Output:
  //   .ux-minWidth300 {
  //     min-width: 300px;
  //   }
  //////////////////////////////////////////////////////////////////
  .ux-minWidth#{$key} {
    min-width: $val;
  }
}

// --------------------------------------------------------------------
// FLEX / BUTTON ROW
//
//   Simple spacer for button rows
//
// --------------------------------------------------------------------
.ux-flexButtonRow {
  $gutter: 0.5rem;
  @apply flex flex-wrap items-center;
  margin-left: -$gutter;
  > * {
    margin-left: $gutter;
  }
}
